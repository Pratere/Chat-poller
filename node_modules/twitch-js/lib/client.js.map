{"version":3,"sources":["../src/client.js"],"names":["api","require","commands","eventEmitter","EventEmitter","logger","parse","timer","ws","global","WebSocket","MozWebSocket","_","client","opts","setMaxListeners","get","channels","connection","identity","options","clientId","maxReconnectAttempts","Infinity","maxReconnectInterval","reconnect","reconnectDecay","reconnectInterval","reconnecting","reconnections","reconnectTimer","secure","emotes","emotesets","currentLatency","globaluserstate","lastJoined","latency","Date","moderators","pingLoop","pingTimeout","reason","username","userstate","wasCloseCalled","level","debug","log","setLevel","e","forEach","part","index","theArray","channel","call","inherits","prototype","Object","keys","methodName","handleMessage","message","isNull","params","msg","msgid","tags","badges","key","isBoolean","prefix","command","emit","readyState","send","currDate","getTime","emits","clearTimeout","warn","JSON","stringify","info","server","port","setInterval","setTimeout","error","close","clearInterval","timeout","joinQueue","queue","joinChannels","union","i","self","add","chan","bind","length","run","splitted","split","mods","replace","toString","toLowerCase","splice","remainingHost","Number","isNaN","charAt","includes","login","plan","planName","replaceAll","months","prime","recipient","viewers","duration","Math","round","disconnect","connect","indexOf","push","isJustinfan","getUsername","_updateEmoteset","hasOwnProperty","slow","minutes","filter","value","isSelf","from","count","extractNumber","match","Promise","resolve","reject","_openConnection","once","err","onmessage","_onMessage","onerror","_onError","onclose","_onClose","onopen","_onOpen","justinfan","password","event","parts","data","str","_getPromiseDelay","_sendCommand","delay","fn","promiseDelay","then","_sendMessage","splitLine","id","emote","isRegex","code","emoteRegex","emoteString","merge","transformEmotes","sets","url","headers","Authorization","res","body","emoticon_sets","getOptions","getChannels","isMod","utils","levenshtein","s1","s2","caseSensitive","cost_ins","cost_rep","cost_del","l1","l2","p1","Array","p2","i1","i2","c0","c1","c2","tmp","raffle","init","raffleChannels","enter","leave","pick","floor","random","reset","isParticipating","symbols","line","charCode","substring","charCodeAt","ceil","uppercase","chars","u_let","module","exports","window","tmi"],"mappings":"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","file":"client.js","sourcesContent":["const api = require('./api');\nconst commands = require('./commands');\nconst eventEmitter = require('./events').EventEmitter;\nconst logger = require('./logger');\nconst parse = require('./parser');\nconst timer = require('./timer');\nconst ws = global.WebSocket || global.MozWebSocket || require('ws');\nconst _ = require('./utils');\n\n// Client instance..\nconst client = function client(opts) {\n  if (this instanceof client === false) { return new client(opts); }\n  this.setMaxListeners(0);\n\n  this.opts = _.get(opts, {});\n  this.opts.channels = this.opts.channels || [];\n  this.opts.connection = this.opts.connection || {};\n  this.opts.identity = this.opts.identity || {};\n  this.opts.options = this.opts.options || {};\n\n  this.clientId = _.get(this.opts.options.clientId, null);\n\n  this.maxReconnectAttempts = _.get(this.opts.connection.maxReconnectAttempts, Infinity);\n  this.maxReconnectInterval = _.get(this.opts.connection.maxReconnectInterval, 30000);\n  this.reconnect = _.get(this.opts.connection.reconnect, false);\n  this.reconnectDecay = _.get(this.opts.connection.reconnectDecay, 1.5);\n  this.reconnectInterval = _.get(this.opts.connection.reconnectInterval, 1000);\n\n  this.reconnecting = false;\n  this.reconnections = 0;\n  this.reconnectTimer = this.reconnectInterval;\n\n  this.secure = _.get(this.opts.connection.secure, false);\n\n  // Raw data and object for emote-sets..\n  this.emotes = '';\n  this.emotesets = {};\n\n  this.channels = [];\n  this.currentLatency = 0;\n  this.globaluserstate = {};\n  this.lastJoined = '';\n  this.latency = new Date();\n  this.moderators = {};\n  this.pingLoop = null;\n  this.pingTimeout = null;\n  this.reason = '';\n  this.username = '';\n  this.userstate = {};\n  this.wasCloseCalled = false;\n  this.ws = null;\n\n  // Create the logger..\n  let level = 'error';\n  if (this.opts.options.debug) { level = 'info'; }\n  this.log = this.opts.logger || logger;\n\n  try {\n    logger.setLevel(level);\n  } catch (e) {\n    // swallow error\n  }\n\n  // Format the channel names..\n  this.opts.channels.forEach((part, index, theArray) => {\n    theArray[index] = _.channel(part);\n  });\n\n  eventEmitter.call(this);\n};\n\n_.inherits(client, eventEmitter);\n\nclient.prototype.api = api;\n\n// Put all commands in prototype..\nObject.keys(commands).forEach((methodName) => {\n  client.prototype[methodName] = commands[methodName];\n});\n\n// Handle parsed chat server message..\nclient.prototype.handleMessage = function handleMessage(message) {\n  if (!_.isNull(message)) {\n    const channel = _.channel(_.get(message.params[0], null));\n    const msg = _.get(message.params[1], null);\n    const msgid = _.get(message.tags['msg-id'], null);\n\n    // Parse badges and emotes..\n    message.tags = parse.badges(parse.emotes(message.tags));\n\n    // Transform IRCv3 tags..\n    if (message.tags) {\n      Object.keys(message.tags).forEach((key) => {\n        if (key !== 'emote-sets' && key !== 'ban-duration' && key !== 'bits') {\n          if (_.isBoolean(message.tags[key])) { message.tags[key] = null; } else if (message.tags[key] === '1') { message.tags[key] = true; } else if (message.tags[key] === '0') { message.tags[key] = false; }\n        }\n      });\n    }\n\n    // Messages with no prefix..\n    if (_.isNull(message.prefix)) {\n      switch (message.command) {\n        // Received PING from server..\n        case 'PING':\n          this.emit('ping');\n          if (!_.isNull(this.ws) && this.ws.readyState !== 2 && this.ws.readyState !== 3) {\n            this.ws.send('PONG');\n          }\n          break;\n\n          // Received PONG from server, return current latency..\n        case 'PONG': {\n          const currDate = new Date();\n          this.currentLatency = (currDate.getTime() - this.latency.getTime()) / 1000;\n          this.emits(['pong', '_promisePing'], [[this.currentLatency], [this.currentLatency]]);\n\n          clearTimeout(this.pingTimeout);\n          break;\n        }\n\n        default:\n          this.log.warn(`Could not parse message with no prefix:\\n${JSON.stringify(message, null, 4)}`);\n          break;\n      }\n    } else if (message.prefix === 'tmi.twitch.tv') {\n      // Messages with \"tmi.twitch.tv\" as a prefix..\n      switch (message.command) {\n        case '002':\n        case '003':\n        case '004':\n        case '375':\n        case '376':\n        case 'CAP':\n          break;\n\n          // Retrieve username from server..\n        case '001':\n          this.username = message.params[0];\n          break;\n\n          // Connected to server..\n        case '372': {\n          this.log.info('Connected to server.');\n          this.userstate['#tmijs'] = {};\n          this.emits(['connected', '_promiseConnect'], [[this.server, this.port], [null]]);\n          this.reconnections = 0;\n          this.reconnectTimer = this.reconnectInterval;\n\n          // Set an internal ping timeout check interval..\n          this.pingLoop = setInterval(() => {\n            // Make sure the connection is opened before sending the message..\n            if (!_.isNull(this.ws) && this.ws.readyState !== 2 && this.ws.readyState !== 3) {\n              this.ws.send('PING');\n            }\n            this.latency = new Date();\n            this.pingTimeout = setTimeout(() => {\n              if (!_.isNull(this.ws)) {\n                this.wasCloseCalled = false;\n                this.log.error('Ping timeout.');\n                this.ws.close();\n\n                clearInterval(this.pingLoop);\n                clearTimeout(this.pingTimeout);\n              }\n            }, _.get(this.opts.connection.timeout, 9999));\n          }, 60000);\n\n          // Join all the channels from configuration with a 2 seconds interval..\n          const joinQueue = new timer.queue(2000);\n          const joinChannels = _.union(this.opts.channels, this.channels);\n          this.channels = [];\n\n          for (let i = 0; i < joinChannels.length; i++) {\n            const self = this;\n            joinQueue.add(((chan) => {\n              if (\n                !_.isNull(self.ws) &&\n                self.ws.readyState !== 2 &&\n                self.ws.readyState !== 3\n              ) {\n                self.ws.send(`JOIN ${_.channel(joinChannels[chan])}`);\n              }\n            }).bind(this, i));\n          }\n\n          joinQueue.run();\n          break;\n        }\n\n        // https://github.com/justintv/Twitch-API/blob/master/chat/capabilities.md#notice\n        case 'NOTICE':\n          switch (msgid) {\n            // This room is now in subscribers-only mode.\n            case 'subs_on':\n              this.log.info(`[${channel}] This room is now in subscribers-only mode.`);\n              this.emits(['subscriber', 'subscribers', '_promiseSubscribers'], [[channel, true], [channel, true], [null]]);\n              break;\n\n              // This room is no longer in subscribers-only mode.\n            case 'subs_off':\n              this.log.info(`[${channel}] This room is no longer in subscribers-only mode.`);\n              this.emits(['subscriber', 'subscribers', '_promiseSubscribersoff'], [[channel, false], [channel, false], [null]]);\n              break;\n\n              // This room is now in emote-only mode.\n            case 'emote_only_on':\n              this.log.info(`[${channel}] This room is now in emote-only mode.`);\n              this.emits(['emoteonly', '_promiseEmoteonly'], [[channel, true], [null]]);\n              break;\n\n              // This room is no longer in emote-only mode.\n            case 'emote_only_off':\n              this.log.info(`[${channel}] This room is no longer in emote-only mode.`);\n              this.emits(['emoteonly', '_promiseEmoteonlyoff'], [[channel, false], [null]]);\n              break;\n\n            // Do not handle slow_on/off here, listen to the ROOMSTATE notice\n            // instead as it returns the delay.\n            case 'slow_on':\n            case 'slow_off':\n              break;\n\n            // Do not handle followers_on/off here, listen to the ROOMSTATE\n            // notice instead as it returns the delay.\n            case 'followers_on_zero':\n            case 'followers_on':\n            case 'followers_off':\n              break;\n\n              // This room is now in r9k mode.\n            case 'r9k_on':\n              this.log.info(`[${channel}] This room is now in r9k mode.`);\n              this.emits(['r9kmode', 'r9kbeta', '_promiseR9kbeta'], [[channel, true], [channel, true], [null]]);\n              break;\n\n              // This room is no longer in r9k mode.\n            case 'r9k_off':\n              this.log.info(`[${channel}] This room is no longer in r9k mode.`);\n              this.emits(['r9kmode', 'r9kbeta', '_promiseR9kbetaoff'], [[channel, false], [channel, false], [null]]);\n              break;\n\n              // The moderators of this room are [...]\n            case 'room_mods': {\n              const splitted = msg.split(':');\n              const mods = splitted[1].replace(/,/g, '').split(':').toString().toLowerCase()\n                .split(' ');\n\n              for (let i = mods.length - 1; i >= 0; i--) {\n                if (mods[i] === '') {\n                  mods.splice(i, 1);\n                }\n              }\n\n              this.emits(['_promiseMods', 'mods'], [[null, mods], [channel, mods]]);\n              break;\n            }\n\n            // There are no moderators for this room.\n            case 'no_mods':\n              this.emit('_promiseMods', null, []);\n              break;\n\n            // Channel is suspended..\n            case 'msg_channel_suspended':\n              this.emits(['notice', '_promiseJoin'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n            // Ban command failed..\n            case 'already_banned':\n            case 'bad_ban_admin':\n            case 'bad_ban_broadcaster':\n            case 'bad_ban_global_mod':\n            case 'bad_ban_self':\n            case 'bad_ban_staff':\n            case 'usage_ban':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseBan'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Ban command success..\n            case 'ban_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseBan'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Clear command failed..\n            case 'usage_clear':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseClear'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Mods command failed..\n            case 'usage_mods':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseMods'], [[channel, msgid, msg], [msgid, []]]);\n              break;\n\n              // Mod command success..\n            case 'mod_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseMod'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Mod command failed..\n            case 'usage_mod':\n            case 'bad_mod_banned':\n            case 'bad_mod_mod':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseMod'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Unmod command success..\n            case 'unmod_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseUnmod'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Unmod command failed..\n            case 'usage_unmod':\n            case 'bad_unmod_mod':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseUnmod'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Color command success..\n            case 'color_changed':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseColor'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Color command failed..\n            case 'usage_color':\n            case 'turbo_only_color':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseColor'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Commercial command success..\n            case 'commercial_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseCommercial'], [[channel, msgid, msg], [null]]);\n              break;\n\n            // Commercial command failed..\n            case 'usage_commercial':\n            case 'bad_commercial_error':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseCommercial'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n            // Host command success..\n            case 'hosts_remaining': {\n              this.log.info(`[${channel}] ${msg}`);\n              const remainingHost = (!Number.isNaN(msg.charAt(0)) ? msg.charAt(0) : 0);\n              this.emits(['notice', '_promiseHost'], [[channel, msgid, msg], [null, ~~remainingHost]]);\n              break;\n            }\n\n            // Host command failed..\n            case 'bad_host_hosting':\n            case 'bad_host_rate_exceeded':\n            case 'bad_host_error':\n            case 'usage_host':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseHost'], [[channel, msgid, msg], [msgid, null]]);\n              break;\n\n              // r9kbeta command failed..\n            case 'already_r9k_on':\n            case 'usage_r9k_on':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseR9kbeta'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // r9kbetaoff command failed..\n            case 'already_r9k_off':\n            case 'usage_r9k_off':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseR9kbetaoff'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Timeout command success..\n            case 'timeout_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseTimeout'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Subscribersoff command failed..\n            case 'already_subs_off':\n            case 'usage_subs_off':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseSubscribersoff'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Subscribers command failed..\n            case 'already_subs_on':\n            case 'usage_subs_on':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseSubscribers'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Emoteonlyoff command failed..\n            case 'already_emote_only_off':\n            case 'usage_emote_only_off':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseEmoteonlyoff'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Emoteonly command failed..\n            case 'already_emote_only_on':\n            case 'usage_emote_only_on':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseEmoteonly'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Slow command failed..\n            case 'usage_slow_on':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseSlow'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Slowoff command failed..\n            case 'usage_slow_off':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseSlowoff'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Timeout command failed..\n            case 'usage_timeout':\n            case 'bad_timeout_admin':\n            case 'bad_timeout_broadcaster':\n            case 'bad_timeout_duration':\n            case 'bad_timeout_global_mod':\n            case 'bad_timeout_self':\n            case 'bad_timeout_staff':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseTimeout'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Unban command success..\n              // Unban can also be used to cancel an active timeout.\n            case 'untimeout_success':\n            case 'unban_success':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseUnban'], [[channel, msgid, msg], [null]]);\n              break;\n\n              // Unban command failed..\n            case 'usage_unban':\n            case 'bad_unban_no_ban':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseUnban'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Unhost command failed..\n            case 'usage_unhost':\n            case 'not_hosting':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseUnhost'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Whisper command failed..\n            case 'whisper_invalid_login':\n            case 'whisper_invalid_self':\n            case 'whisper_limit_per_min':\n            case 'whisper_limit_per_sec':\n            case 'whisper_restricted_recipient':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits(['notice', '_promiseWhisper'], [[channel, msgid, msg], [msgid]]);\n              break;\n\n              // Permission error..\n            case 'no_permission':\n            case 'msg_banned':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emits([\n                'notice',\n                '_promiseBan',\n                '_promiseClear',\n                '_promiseUnban',\n                '_promiseTimeout',\n                '_promiseMods',\n                '_promiseMod',\n                '_promiseUnmod',\n                '_promiseCommercial',\n                '_promiseHost',\n                '_promiseUnhost',\n                '_promiseR9kbeta',\n                '_promiseR9kbetaoff',\n                '_promiseSlow',\n                '_promiseSlowoff',\n                '_promiseFollowers',\n                '_promiseFollowersoff',\n                '_promiseSubscribers',\n                '_promiseSubscribersoff',\n                '_promiseEmoteonly',\n                '_promiseEmoteonlyoff',\n              ], [\n                [channel, msgid, msg],\n                [msgid], [msgid], [msgid], [msgid],\n                [msgid], [msgid], [msgid], [msgid],\n                [msgid], [msgid], [msgid], [msgid],\n                [msgid], [msgid], [msgid], [msgid],\n                [msgid], [msgid], [msgid], [msgid],\n              ]);\n              break;\n\n              // Unrecognized command..\n            case 'unrecognized_cmd':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emit('notice', channel, msgid, msg);\n\n              if (msg.split(' ').splice(-1)[0] === '/w') {\n                this.log.warn('You must be connected to a group server to send or receive whispers.');\n              }\n              break;\n\n              // Send the following msg-ids to the notice event listener..\n            case 'cmds_available':\n            case 'host_target_went_offline':\n            case 'msg_censored_broadcaster':\n            case 'msg_duplicate':\n            case 'msg_emoteonly':\n            case 'msg_followersonly':\n            case 'msg_verified_email':\n            case 'msg_ratelimit':\n            case 'msg_subsonly':\n            case 'msg_timedout':\n            case 'no_help':\n            case 'usage_disconnect':\n            case 'usage_help':\n            case 'usage_me':\n              this.log.info(`[${channel}] ${msg}`);\n              this.emit('notice', channel, msgid, msg);\n              break;\n\n              // Ignore this because we are already listening to HOSTTARGET..\n            case 'host_on':\n            case 'host_off':\n              //\n              break;\n\n            default:\n              if (msg.includes('Login unsuccessful') || msg.includes('Login authentication failed')) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = msg;\n                this.log.error(this.reason);\n                this.ws.close();\n              } else if (msg.includes('Error logging in') || msg.includes('Improperly formatted auth')) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = msg;\n                this.log.error(this.reason);\n                this.ws.close();\n              } else if (msg.includes('Invalid NICK')) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = 'Invalid NICK.';\n                this.log.error(this.reason);\n                this.ws.close();\n              } else {\n                this.log.warn(`Could not parse NOTICE from tmi.twitch.tv:\\n${JSON.stringify(message, null, 4)}`);\n              }\n              break;\n          }\n          break;\n\n          // Handle subanniversary / resub..\n        case 'USERNOTICE': {\n          if (msgid === 'resub') {\n            const username = message.tags['display-name'] || message.tags.login;\n            const plan = message.tags['msg-param-sub-plan'];\n            const planName = _.replaceAll(_.get(message.tags['msg-param-sub-plan-name'], null), {\n              '\\\\\\\\s': ' ',\n              '\\\\\\\\:': ';',\n              '\\\\\\\\\\\\\\\\': '\\\\',\n              '\\\\r': '\\r',\n              '\\\\n': '\\n',\n            });\n            const months = _.get(~~message.tags['msg-param-months'], null);\n            const prime = plan.includes('Prime');\n            const userstate = message.tags;\n\n            if (userstate) { userstate['message-type'] = 'resub'; }\n\n            this.emits(['resub', 'subanniversary'], [\n              [channel, username, months, msg, userstate, { prime, plan, planName }],\n              [channel, username, months, msg, userstate, { prime, plan, planName }],\n            ]);\n          } else if (msgid === 'sub') {\n            // Handle sub\n            const username = message.tags['display-name'] || message.tags.login;\n            const plan = message.tags['msg-param-sub-plan'];\n            const planName = _.replaceAll(_.get(message.tags['msg-param-sub-plan-name'], null), {\n              '\\\\\\\\s': ' ',\n              '\\\\\\\\:': ';',\n              '\\\\\\\\\\\\\\\\': '\\\\',\n              '\\\\r': '\\r',\n              '\\\\n': '\\n',\n            });\n            const prime = plan.includes('Prime');\n            const userstate = message.tags;\n\n            if (userstate) { userstate['message-type'] = 'sub'; }\n\n            this.emit('subscription', channel, username, { prime, plan, planName }, msg, userstate);\n          } else if (msgid === 'subgift') {\n            const username = message.tags['display-name'] || message.tags.login;\n            const recipient = message.tags['msg-param-recipient-display-name'] || message.tags['msg-param-recipient-user-name'];\n            const plan = message.tags['msg-param-sub-plan'];\n            const planName = _.replaceAll(_.get(message.tags['msg-param-sub-plan-name'], null), {\n              '\\\\\\\\s': ' ',\n              '\\\\\\\\:': ';',\n              '\\\\\\\\\\\\\\\\': '\\\\',\n              '\\\\r': '\\r',\n              '\\\\n': '\\n',\n            });\n            const userstate = message.tags;\n\n            if (userstate) {\n              userstate['message-type'] = 'subgift';\n            }\n\n            this.emit('subgift', channel, username, recipient, { plan, planName }, userstate);\n          }\n          break;\n        }\n\n        // Channel is now hosting another channel or exited host mode..\n        case 'HOSTTARGET':\n          // Stopped hosting..\n          if (msg.split(' ')[0] === '-') {\n            this.log.info(`[${channel}] Exited host mode.`);\n            this.emits(['unhost', '_promiseUnhost'], [[channel, ~~msg.split(' ')[1] || 0], [null]]);\n          } else {\n            // Now hosting..\n            const viewers = ~~msg.split(' ')[1] || 0;\n\n            this.log.info(`[${channel}] Now hosting ${msg.split(' ')[0]} for ${viewers} viewer(s).`);\n            this.emit('hosting', channel, msg.split(' ')[0], viewers);\n          }\n          break;\n\n          // Someone has been timed out or chat has been cleared by a moderator..\n        case 'CLEARCHAT':\n          // User has been banned / timed out by a moderator..\n          if (message.params.length > 1) {\n            // Duration returns null if it's a ban, otherwise it's a timeout..\n            const duration = _.get(message.tags['ban-duration'], null);\n\n            // Escaping values: http://ircv3.net/specs/core/message-tags-3.2.html#escaping-values\n            const reason = _.replaceAll(_.get(message.tags['ban-reason'], null), {\n              '\\\\\\\\s': ' ',\n              '\\\\\\\\:': ';',\n              '\\\\\\\\\\\\\\\\': '\\\\',\n              '\\\\r': '\\r',\n              '\\\\n': '\\n',\n            });\n\n            if (_.isNull(duration)) {\n              this.log.info(`[${channel}] ${msg} has been banned. Reason: ${reason || 'n/a'}`);\n              this.emit('ban', channel, msg, reason);\n            } else {\n              this.log.info(`[${channel}] ${msg} has been timed out for ${duration} seconds. Reason: ${reason || 'n/a'}`);\n              this.emit('timeout', channel, msg, reason, ~~duration);\n            }\n          } else {\n            // Chat was cleared by a moderator..\n            this.log.info(`[${channel}] Chat was cleared by a moderator.`);\n            this.emits(['clearchat', '_promiseClear'], [[channel], [null]]);\n          }\n          break;\n\n          // Received a reconnection request from the server..\n        case 'RECONNECT':\n          this.log.info('Received RECONNECT request from Twitch..');\n          this.log.info(`Disconnecting and reconnecting in ${Math.round(this.reconnectTimer / 1000)} seconds..`);\n          this.disconnect();\n          setTimeout(() => { this.connect(); }, this.reconnectTimer);\n          break;\n\n          // Wrong cluster..\n        case 'SERVERCHANGE':\n          //\n          break;\n\n          // Received when joining a channel and every time you send a PRIVMSG to a channel.\n        case 'USERSTATE':\n          message.tags.username = this.username;\n\n          // Add the client to the moderators of this room..\n          if (message.tags['user-type'] === 'mod') {\n            if (!this.moderators[this.lastJoined]) { this.moderators[this.lastJoined] = []; }\n            if (this.moderators[this.lastJoined].indexOf(this.username) < 0) {\n              this.moderators[this.lastJoined].push(this.username);\n            }\n          }\n\n          // Logged in and username doesn't start with justinfan..\n          if (!_.isJustinfan(this.getUsername()) && !this.userstate[channel]) {\n            this.userstate[channel] = message.tags;\n            this.lastJoined = channel;\n            this.channels.push(channel);\n            this.log.info(`Joined ${channel}`);\n            this.emit('join', channel, _.username(this.getUsername()), true);\n          }\n\n          // Emote-sets has changed, update it..\n          if (message.tags['emote-sets'] !== this.emotes) {\n            this._updateEmoteset(message.tags['emote-sets']);\n          }\n\n          this.userstate[channel] = message.tags;\n          break;\n\n          // Describe non-channel-specific state informations..\n        case 'GLOBALUSERSTATE':\n          this.globaluserstate = message.tags;\n\n          // Received emote-sets..\n          if (typeof message.tags['emote-sets'] !== 'undefined') {\n            this._updateEmoteset(message.tags['emote-sets']);\n          }\n          break;\n\n          // Received when joining a channel and every time one of the chat\n          // room settings, like slow mode, change.\n          // The message on join contains all room settings.\n        case 'ROOMSTATE':\n          // We use this notice to know if we successfully joined a channel..\n          if (_.channel(this.lastJoined) === _.channel(message.params[0])) { this.emit('_promiseJoin', null); }\n\n          // Provide the channel name in the tags before emitting it..\n          message.tags.channel = _.channel(message.params[0]);\n          this.emit('roomstate', _.channel(message.params[0]), message.tags);\n\n          // Handle slow mode here instead of the slow_on/off notice..\n          // This room is now in slow mode. You may send messages every slow_duration seconds.\n          if (message.tags.hasOwnProperty('slow') && !message.tags.hasOwnProperty('subs-only')) {\n            if (typeof message.tags.slow === 'boolean') {\n              this.log.info(`[${channel}] This room is no longer in slow mode.`);\n              this.emits(['slow', 'slowmode', '_promiseSlowoff'], [[channel, false, 0], [channel, false, 0], [null]]);\n            } else {\n              this.log.info(`[${channel}] This room is now in slow mode.`);\n              this.emits(['slow', 'slowmode', '_promiseSlow'], [[channel, true, ~~message.tags.slow], [channel, true, ~~message.tags.slow], [null]]);\n            }\n          }\n\n          // Handle followers only mode here instead of the followers_on/off notice..\n          // This room is now in follower-only mode.\n          // This room is now in <duration> followers-only mode.\n          // This room is no longer in followers-only mode.\n          // duration is in minutes (string)\n          // -1 when /followersoff (string)\n          // false when /followers with no duration (boolean)\n          if (message.tags.hasOwnProperty('followers-only') && !message.tags.hasOwnProperty('subs-only')) {\n            if (message.tags['followers-only'] === '-1') {\n              this.log.info(`[${channel}] This room is no longer in followers-only mode.`);\n              this.emits(['followersonly', 'followersmode', '_promiseFollowersoff'], [[channel, false, 0], [channel, false, 0], [null]]);\n            } else {\n              const minutes = ~~message.tags['followers-only'];\n              this.log.info(`[${channel}] This room is now in follower-only mode.`);\n              this.emits(['followersonly', 'followersmode', '_promiseFollowers'], [[channel, true, minutes], [channel, true, minutes], [null]]);\n            }\n          }\n          break;\n\n        default:\n          this.log.warn(`Could not parse message from tmi.twitch.tv:\\n${JSON.stringify(message, null, 4)}`);\n          break;\n      }\n    } else if (message.prefix === 'jtv') {\n      // Messages from jtv..\n      switch (message.command) {\n        case 'MODE':\n          if (msg === '+o') {\n            // Add username to the moderators..\n            if (!this.moderators[channel]) { this.moderators[channel] = []; }\n            if (this.moderators[channel].indexOf(message.params[2]) < 0) {\n              this.moderators[channel].push(message.params[2]);\n            }\n\n            this.emit('mod', channel, message.params[2]);\n          } else if (msg === '-o') {\n            // Remove username from the moderators..\n            if (!this.moderators[channel]) { this.moderators[channel] = []; }\n            this.moderators[channel]\n              .filter(value => value !== message.params[2]);\n\n            this.emit('unmod', channel, message.params[2]);\n          }\n          break;\n\n        default:\n          this.log.warn(`Could not parse message from jtv:\\n${JSON.stringify(message, null, 4)}`);\n          break;\n      }\n    } else {\n      // Anything else..\n      switch (message.command) {\n        case '353':\n          this.emit('names', message.params[2], message.params[3].split(' '));\n          break;\n\n        case '366':\n          break;\n\n          // Someone has joined the channel..\n        case 'JOIN':\n          // Joined a channel as a justinfan (anonymous) user..\n          if (_.isJustinfan(this.getUsername()) && this.username === message.prefix.split('!')[0]) {\n            this.lastJoined = channel;\n            this.channels.push(channel);\n            this.log.info(`Joined ${channel}`);\n            this.emit('join', channel, message.prefix.split('!')[0], true);\n          }\n\n          // Someone else joined the channel, just emit the join event..\n          if (this.username !== message.prefix.split('!')[0]) {\n            this.emit('join', channel, message.prefix.split('!')[0], false);\n          }\n          break;\n\n          // Someone has left the channel..\n        case 'PART': {\n          let isSelf = false;\n          let index;\n          // Client a channel..\n          if (this.username === message.prefix.split('!')[0]) {\n            isSelf = true;\n            if (this.userstate[channel]) { delete this.userstate[channel]; }\n\n            index = this.channels.indexOf(channel);\n            if (index !== -1) { this.channels.splice(index, 1); }\n\n            index = this.opts.channels.indexOf(channel);\n            if (index !== -1) { this.opts.channels.splice(index, 1); }\n\n            this.log.info(`Left ${channel}`);\n            this.emit('_promisePart', null);\n          }\n\n          // Client or someone else left the channel, emit the part event..\n          this.emit('part', channel, message.prefix.split('!')[0], isSelf);\n          break;\n        }\n\n        // Received a whisper..\n        case 'WHISPER': {\n          this.log.info(`[WHISPER] <${message.prefix.split('!')[0]}>: ${msg}`);\n\n          // Update the tags to provide the username..\n          if (!message.tags.hasOwnProperty('username')) {\n            message.tags.username = message.prefix.split('!')[0];\n          }\n          message.tags['message-type'] = 'whisper';\n\n          const from = _.channel(message.tags.username);\n          // Emit for both, whisper and message..\n          this.emits(['whisper', 'message'], [\n            [from, message.tags, msg, false],\n            [from, message.tags, msg, false],\n          ]);\n          break;\n        }\n\n        case 'PRIVMSG':\n          // Add username (lowercase) to the tags..\n          message.tags.username = message.prefix.split('!')[0];\n\n          // Message from JTV..\n          if (message.tags.username === 'jtv') {\n            // Someone is hosting the channel and the message contains how many viewers..\n            if (msg.includes('hosting you for')) {\n              const count = _.extractNumber(msg);\n\n              this.emit('hosted', channel, _.username(msg.split(' ')[0]), count, msg.includes('auto'));\n            } else if (msg.includes('hosting you')) {\n              // Some is hosting the channel, but no viewer(s) count provided in\n              // the message..\n              this.emit('hosted', channel, _.username(msg.split(' ')[0]), 0, msg.includes('auto'));\n            }\n          } else {\n            // Message is an action (/me <message>)..\n            if (msg.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)) {\n              message.tags['message-type'] = 'action';\n              this.log.info(`[${channel}] *<${message.tags.username}>: ${msg.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1]}`);\n              this.emits(['action', 'message'], [\n                [channel, message.tags, msg.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1], false],\n                [channel, message.tags, msg.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1], false],\n              ]);\n            } else if (message.tags.hasOwnProperty('bits')) {\n              this.emit('cheer', channel, message.tags, msg);\n            } else {\n              // Message is a regular chat message..\n              message.tags['message-type'] = 'chat';\n              this.log.info(`[${channel}] <${message.tags.username}>: ${msg}`);\n\n              this.emits(['chat', 'message'], [\n                [channel, message.tags, msg, false],\n                [channel, message.tags, msg, false],\n              ]);\n            }\n          }\n          break;\n\n        default:\n          this.log.warn(`Could not parse message:\\n${JSON.stringify(message, null, 4)}`);\n          break;\n      }\n    }\n  }\n};\n\n// Connect to server..\nclient.prototype.connect = function connect() {\n  return new Promise((resolve, reject) => {\n    this.server = _.get(this.opts.connection.server, 'irc-ws.chat.twitch.tv');\n    this.port = _.get(this.opts.connection.port, 80);\n\n    // Override port if using a secure connection..\n    if (this.secure) { this.port = 443; }\n    if (this.port === 443) { this.secure = true; }\n\n    this.reconnectTimer = this.reconnectTimer * this.reconnectDecay;\n    if (this.reconnectTimer >= this.maxReconnectInterval) {\n      this.reconnectTimer = this.maxReconnectInterval;\n    }\n\n    // Connect to server from configuration..\n    this._openConnection();\n    this.once('_promiseConnect', (err) => {\n      if (!err) { resolve([this.server, ~~this.port]); } else { reject(err); }\n    });\n  });\n};\n\n// Open a connection..\nclient.prototype._openConnection = function _openConnection() {\n  this.ws = new ws(`${this.secure ? 'wss' : 'ws'}://${this.server}:${this.port}/`, 'irc');\n\n  this.ws.onmessage = this._onMessage.bind(this);\n  this.ws.onerror = this._onError.bind(this);\n  this.ws.onclose = this._onClose.bind(this);\n  this.ws.onopen = this._onOpen.bind(this);\n};\n\n// Called when the WebSocket connection's readyState changes to OPEN.\n// Indicates that the connection is ready to send and receive data..\nclient.prototype._onOpen = function _onOpen() {\n  if (!_.isNull(this.ws) && this.ws.readyState === 1) {\n    // Emitting \"connecting\" event..\n    this.log.info(`Connecting to ${this.server} on port ${this.port}..`);\n    this.emit('connecting', this.server, ~~this.port);\n\n    this.username = _.get(this.opts.identity.username, _.justinfan());\n    this.password = _.password(_.get(this.opts.identity.password, 'SCHMOOPIIE'));\n\n    // Emitting \"logon\" event..\n    this.log.info('Sending authentication to server..');\n    this.emit('logon');\n\n    // Authentication..\n    this.ws.send('CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership');\n    this.ws.send(`PASS ${this.password}`);\n    this.ws.send(`NICK ${this.username}`);\n    this.ws.send(`USER ${this.username} 8 * :${this.username}`);\n  }\n};\n\n// Called when a message is received from the server..\nclient.prototype._onMessage = function _onMessage(event) {\n  const parts = event.data.split('\\r\\n');\n\n  parts.forEach((str) => {\n    if (!_.isNull(str)) { this.handleMessage(parse.msg(str)); }\n  });\n};\n\n// Called when an error occurs..\nclient.prototype._onError = function _onError() {\n  this.moderators = {};\n  this.userstate = {};\n  this.globaluserstate = {};\n\n  // Stop the internal ping timeout check interval..\n  clearInterval(this.pingLoop);\n  clearTimeout(this.pingTimeout);\n\n  this.reason = !_.isNull(this.ws) ? 'Unable to connect.' : 'Connection closed.';\n\n  this.emits(['_promiseConnect', 'disconnected'], [[this.reason], [this.reason]]);\n\n  // Reconnect to server..\n  if (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n    this.emit('maxreconnect');\n    this.log.error('Maximum reconnection attempts reached.');\n  }\n  if (this.reconnect && !this.reconnecting && this.reconnections <= this.maxReconnectAttempts - 1) {\n    this.reconnecting = true;\n    this.reconnections = this.reconnections + 1;\n    this.log.error(`Reconnecting in ${Math.round(this.reconnectTimer / 1000)} seconds..`);\n    this.emit('reconnect');\n    setTimeout(() => { this.reconnecting = false; this.connect(); }, this.reconnectTimer);\n  }\n\n  this.ws = null;\n};\n\n// Called when the WebSocket connection's readyState changes to CLOSED..\nclient.prototype._onClose = function _onClose() {\n  this.moderators = {};\n  this.userstate = {};\n  this.globaluserstate = {};\n\n  // Stop the internal ping timeout check interval..\n  clearInterval(this.pingLoop);\n  clearTimeout(this.pingTimeout);\n\n  // User called .disconnect(), don't try to reconnect.\n  if (this.wasCloseCalled) {\n    this.wasCloseCalled = false;\n    this.reason = 'Connection closed.';\n    this.log.info(this.reason);\n    this.emits(['_promiseConnect', '_promiseDisconnect', 'disconnected'], [[this.reason], [null], [this.reason]]);\n  } else {\n    // Got disconnected from server..\n    this.emits(['_promiseConnect', 'disconnected'], [[this.reason], [this.reason]]);\n\n    // Reconnect to server..\n    if (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n      this.emit('maxreconnect');\n      this.log.error('Maximum reconnection attempts reached.');\n    }\n    if (\n      this.reconnect &&\n      !this.reconnecting &&\n      this.reconnections <= this.maxReconnectAttempts - 1\n    ) {\n      this.reconnecting = true;\n      this.reconnections = this.reconnections + 1;\n      this.log.error(`Could not connect to server. Reconnecting in ${Math.round(this.reconnectTimer / 1000)} seconds..`);\n      this.emit('reconnect');\n      setTimeout(() => { this.reconnecting = false; this.connect(); }, this.reconnectTimer);\n    }\n  }\n\n  this.ws = null;\n};\n\n// Minimum of 600ms for command promises, if current latency exceeds, add 100ms\n// to it to make sure it doesn't get timed out..\nclient.prototype._getPromiseDelay = function _getPromiseDelay() {\n  if (this.currentLatency <= 600) { return 600; }\n  return this.currentLatency + 100;\n};\n\n// Send command to server or channel..\nclient.prototype._sendCommand = function _sendCommand(delay, channel, command, fn) {\n  // Race promise against delay..\n  return new Promise((resolve, reject) => {\n    _.promiseDelay(delay).then(() => { reject('No response from Twitch.'); });\n\n    // Make sure the socket is opened..\n    if (!_.isNull(this.ws) && this.ws.readyState !== 2 && this.ws.readyState !== 3) {\n      // Executing a command on a channel..\n      if (!_.isNull(channel)) {\n        this.log.info(`[${_.channel(channel)}] Executing command: ${command}`);\n        this.ws.send(`PRIVMSG ${_.channel(channel)} :${command}`);\n      } else {\n        // Executing a raw command..\n        this.log.info(`Executing command: ${command}`);\n        this.ws.send(command);\n      }\n      fn(resolve, reject);\n    } else {\n      // Disconnected from server..\n      reject('Not connected to server.');\n    }\n  });\n};\n\n// Send a message to channel..\nclient.prototype._sendMessage = function _sendMessage(delay, channel, message, fn) {\n  // Promise a result..\n  return new Promise((resolve, reject) => {\n    // Make sure the socket is opened and not logged in as a justinfan user..\n    if (\n      !_.isNull(this.ws) &&\n      this.ws.readyState !== 2 &&\n      this.ws.readyState !== 3 &&\n      !_.isJustinfan(this.getUsername())\n    ) {\n      if (!this.userstate[_.channel(channel)]) { this.userstate[_.channel(channel)] = {}; }\n\n      // Split long lines otherwise they will be eaten by the server..\n      if (message.length >= 500) {\n        const msg = _.splitLine(message, 500);\n        message = msg[0];\n\n        setTimeout(() => {\n          this._sendMessage(delay, channel, msg[1], () => {});\n        }, 350);\n      }\n\n      this.ws.send(`PRIVMSG ${_.channel(channel)} :${message}`);\n\n      const emotes = {};\n\n      // Parse regex and string emotes..\n      Object.keys(this.emotesets).forEach((id) => {\n        this.emotesets[id].forEach((emote) => {\n          if (_.isRegex(emote.code)) {\n            return parse.emoteRegex(message, emote.code, emote.id, emotes);\n          }\n          parse.emoteString(message, emote.code, emote.id, emotes);\n        });\n      });\n\n      // Merge userstate with parsed emotes..\n      const userstate = _.merge(\n        this.userstate[_.channel(channel)],\n        parse.emotes({ emotes: parse.transformEmotes(emotes) || null }),\n      );\n\n      // Message is an action (/me <message>)..\n      if (message.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)) {\n        userstate['message-type'] = 'action';\n        this.log.info(`[${_.channel(channel)}] *<${this.getUsername()}>: ${message.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1]}`);\n        this.emits(['action', 'message'], [\n          [_.channel(channel), userstate, message.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1], true],\n          [_.channel(channel), userstate, message.match(/^\\u0001ACTION ([^\\u0001]+)\\u0001$/)[1], true],\n        ]);\n      } else {\n        // Message is a regular chat message..\n        userstate['message-type'] = 'chat';\n        this.log.info(`[${_.channel(channel)}] <${this.getUsername()}>: ${message}`);\n        this.emits(['chat', 'message'], [\n          [_.channel(channel), userstate, message, true],\n          [_.channel(channel), userstate, message, true],\n        ]);\n      }\n      fn(resolve, reject);\n    } else {\n      reject('Not connected to server.');\n    }\n  });\n};\n\n// Grab the emote-sets object from the API..\nclient.prototype._updateEmoteset = function _updateEmoteset(sets) {\n  this.emotes = sets;\n\n  this.api({\n    url: `/chat/emoticon_images?emotesets=${sets}`,\n    headers: {\n      Authorization: `OAuth ${_.password(_.get(this.opts.identity.password, '')).replace('oauth:', '')}`,\n      'Client-ID': this.clientId,\n    },\n  }, (err, res, body) => {\n    if (!err) {\n      this.emotesets = body.emoticon_sets || {};\n      return this.emit('emotesets', sets, this.emotesets);\n    }\n    setTimeout(() => { this._updateEmoteset(sets); }, 60000);\n  });\n};\n\n// Get current username..\nclient.prototype.getUsername = function getUsername() {\n  return this.username;\n};\n\n// Get current options..\nclient.prototype.getOptions = function getOptions() {\n  return this.opts;\n};\n\n// Get current channels..\nclient.prototype.getChannels = function getChannels() {\n  return this.channels;\n};\n\n// Check if username is a moderator on a channel..\nclient.prototype.isMod = function isMod(channel, username) {\n  if (!this.moderators[_.channel(channel)]) { this.moderators[_.channel(channel)] = []; }\n  if (this.moderators[_.channel(channel)].indexOf(_.username(username)) >= 0) {\n    return true;\n  }\n  return false;\n};\n\n// Get readyState..\nclient.prototype.readyState = function readyState() {\n  if (_.isNull(this.ws)) { return 'CLOSED'; }\n  return ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'][this.ws.readyState];\n};\n\n// Disconnect from server..\nclient.prototype.disconnect = function disconnect() {\n  return new Promise((resolve, reject) => {\n    if (!_.isNull(this.ws) && this.ws.readyState !== 3) {\n      this.wasCloseCalled = true;\n      this.log.info('Disconnecting from server..');\n      this.ws.close();\n      this.once('_promiseDisconnect', () => { resolve([this.server, ~~this.port]); });\n    } else {\n      this.log.error('Cannot disconnect from server. Socket is not opened or connection is already closing.');\n      reject('Cannot disconnect from server. Socket is not opened or connection is already closing.');\n    }\n  });\n};\n\nclient.prototype.utils = {\n  levenshtein: function levenshtein(s1, s2, caseSensitive) {\n    const cost_ins = 1;\n    const cost_rep = 1;\n    const cost_del = 1;\n    caseSensitive = _.get(caseSensitive, false);\n\n    if (!caseSensitive) {\n      s1 = s1.toLowerCase();\n      s2 = s2.toLowerCase();\n    }\n\n    if (s1 === s2) { return 0; }\n\n    const l1 = s1.length;\n    const l2 = s2.length;\n\n    if (l1 === 0) { return l2 * cost_ins; }\n    if (l2 === 0) { return l1 * cost_del; }\n\n    let split = false;\n    try {\n      split = !('0')[0];\n    } catch (e) {\n      split = true;\n    }\n    if (split) {\n      s1 = s1.split('');\n      s2 = s2.split('');\n    }\n\n    let p1 = new Array(l2 + 1);\n    let p2 = new Array(l2 + 1);\n\n    let i1;\n    let i2;\n    let c0;\n    let c1;\n    let c2;\n    let tmp;\n\n    for (i2 = 0; i2 <= l2; i2++) {\n      p1[i2] = i2 * cost_ins;\n    }\n\n    for (i1 = 0; i1 < l1; i1++) {\n      p2[0] = p1[0] + cost_del;\n\n      for (i2 = 0; i2 < l2; i2++) {\n        c0 = p1[i2] + ((s1[i1] === s2[i2]) ? 0 : cost_rep);\n        c1 = p1[i2 + 1] + cost_del;\n\n        if (c1 < c0) {\n          c0 = c1;\n        }\n\n        c2 = p2[i2] + cost_ins;\n\n        if (c2 < c0) {\n          c0 = c2;\n        }\n\n        p2[i2 + 1] = c0;\n      }\n\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n    }\n\n    c0 = p1[l2];\n\n    return c0;\n  },\n  raffle: {\n    init: function init(channel) {\n      if (!this.raffleChannels) { this.raffleChannels = {}; }\n      if (!this.raffleChannels[_.channel(channel)]) {\n        this.raffleChannels[_.channel(channel)] = [];\n      }\n    },\n    enter: function enter(channel, username) {\n      this.init(channel);\n      this.raffleChannels[_.channel(channel)].push(username.toLowerCase());\n    },\n    leave: function leave(channel, username) {\n      this.init(channel);\n      const index = this.raffleChannels[_.channel(channel)].indexOf(_.username(username));\n      if (index >= 0) {\n        this.raffleChannels[_.channel(channel)].splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    pick: function pick(channel) {\n      this.init(channel);\n      const count = this.raffleChannels[_.channel(channel)].length;\n      if (count >= 1) {\n        return this.raffleChannels[_.channel(channel)][Math.floor((Math.random() * count))];\n      }\n      return null;\n    },\n    reset: function reset(channel) {\n      this.init(channel);\n      this.raffleChannels[_.channel(channel)] = [];\n    },\n    count: function count(channel) {\n      this.init(channel);\n      if (this.raffleChannels[_.channel(channel)]) {\n        return this.raffleChannels[_.channel(channel)].length;\n      }\n      return 0;\n    },\n    isParticipating: function isParticipating(channel, username) {\n      this.init(channel);\n      if (this.raffleChannels[_.channel(channel)].indexOf(_.username(username)) >= 0) {\n        return true;\n      }\n      return false;\n    },\n  },\n  symbols: function symbols(line) {\n    let count = 0;\n    for (let i = 0; i < line.length; i++) {\n      const charCode = line.substring(i, i + 1).charCodeAt(0);\n      if ((charCode <= 30 || charCode >= 127) || charCode === 65533) {\n        count++;\n      }\n    }\n    return Math.ceil((count / line.length) * 100) / 100;\n  },\n  uppercase: function uppercase(line) {\n    const chars = line.length;\n    const u_let = line.match(/[A-Z]/g);\n    if (!_.isNull(u_let)) {\n      return (u_let.length / chars);\n    }\n    return 0;\n  },\n};\n\n// Expose everything, for browser and Node..\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = client;\n}\nif (typeof window !== 'undefined') {\n  window.tmi = {};\n  window.tmi.client = client;\n}\n"]}