{"version":3,"sources":["../src/api.js"],"names":["request","require","_","api","options","callback","url","get","uri","isURL","charAt","isNode","merge","method","json","err","res","body","isExtension","xhrOptions","headers","xhr","XMLHttpRequest","open","Object","keys","forEach","setRequestHeader","name","responseType","addEventListener","readyState","status","response","send","script","document","createElement","callbackName","Math","round","random","window","data","removeChild","src","indexOf","appendChild","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,IAAID,QAAQ,SAAR,CAAV;;AAEA,IAAME,MAAM,SAASA,GAAT,CAAaC,OAAb,EAAsBC,QAAtB,EAAgC;AAC1C;AACA,MAAIC,MAAMJ,EAAEK,GAAF,CAAMH,QAAQE,GAAd,EAAmB,IAAnB,MAA6B,IAA7B,GAAoCJ,EAAEK,GAAF,CAAMH,QAAQI,GAAd,EAAmB,IAAnB,CAApC,GAA+DN,EAAEK,GAAF,CAAMH,QAAQE,GAAd,EAAmB,IAAnB,CAAzE;;AAEA;AACA,MAAI,CAACJ,EAAEO,KAAF,CAAQH,GAAR,CAAL,EAAmB;AAAEA,UAAMA,IAAII,MAAJ,CAAW,CAAX,MAAkB,GAAlB,oCAAuDJ,GAAvD,qCAA+FA,GAArG;AAA6G;;AAElI;AACA,MAAIJ,EAAES,MAAF,EAAJ,EAAgB;AACdX,YAAQE,EAAEU,KAAF,CAAQ,EAAEC,QAAQ,KAAV,EAAiBC,MAAM,IAAvB,EAAR,EAAuCV,OAAvC,EAAgD,EAAEE,QAAF,EAAhD,CAAR,EAAkE,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpFZ,eAASU,GAAT,EAAcC,GAAd,EAAmBC,IAAnB;AACD,KAFD;AAGD,GAJD,MAIO,IAAIf,EAAEgB,WAAF,EAAJ,EAAqB;AAC1B;AACA,QAAMC,aAAajB,EAAEU,KAAF,CAAQR,OAAR,EAAiB,EAAEE,QAAF,EAAOO,QAAQ,KAAf,EAAsBO,SAAS,EAA/B,EAAjB,CAAnB;AACA;AACA,QAAMC,MAAM,IAAIC,cAAJ,EAAZ;AACAD,QAAIE,IAAJ,CAASJ,WAAWN,MAApB,EAA4BM,WAAWb,GAAvC,EAA4C,IAA5C;AACAkB,WAAOC,IAAP,CAAYN,UAAZ,EACGO,OADH,CACW;AAAA,aAAQL,IAAIM,gBAAJ,CAAqBC,IAArB,EAA2BT,WAAWC,OAAX,CAAmBQ,IAAnB,CAA3B,CAAR;AAAA,KADX;AAEAP,QAAIQ,YAAJ,GAAmB,MAAnB;AACA;AACAR,QAAIS,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AACjC,UAAIT,IAAIU,UAAJ,KAAmB,CAAvB,EAA0B;AACxB,YAAIV,IAAIW,MAAJ,KAAe,GAAnB,EAAwB;AACtB3B,mBAASgB,IAAIW,MAAb,EAAqB,IAArB,EAA2B,IAA3B;AACD,SAFD,MAEO;AACL3B,mBAAS,IAAT,EAAe,IAAf,EAAqBgB,IAAIY,QAAzB;AACD;AACF;AACF,KARD;AASA;AACAZ,QAAIa,IAAJ;AACD,GArBM,MAqBA;AACL;AACA;AACA,QAAMC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;;AAEA,QAAMC,mCAAiCC,KAAKC,KAAL,CAAW,SAASD,KAAKE,MAAL,EAApB,CAAvC;AACAC,WAAOJ,YAAP,IAAuB,UAACK,IAAD,EAAU;AAC/B,aAAOD,OAAOJ,YAAP,CAAP;AACAF,eAASnB,IAAT,CAAc2B,WAAd,CAA0BT,MAA1B;AACA9B,eAAS,IAAT,EAAe,IAAf,EAAqBsC,IAArB;AACD,KAJD;;AAMA;AACAR,WAAOU,GAAP,QAAgBvC,GAAhB,IAAsBA,IAAIwC,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,GAApD,kBAAmER,YAAnE;AACAF,aAASnB,IAAT,CAAc8B,WAAd,CAA0BZ,MAA1B;AACD;AACF,CAjDD;;AAmDAa,OAAOC,OAAP,GAAiB9C,GAAjB","file":"api.js","sourcesContent":["const request = require('request');\nconst _ = require('./utils');\n\nconst api = function api(options, callback) {\n  // Set the url to options.uri or options.url..\n  let url = _.get(options.url, null) === null ? _.get(options.uri, null) : _.get(options.url, null);\n\n  // Make sure it is a valid url..\n  if (!_.isURL(url)) { url = url.charAt(0) === '/' ? `https://api.twitch.tv/kraken${url}` : `https://api.twitch.tv/kraken/${url}`; }\n\n  // We are inside a Node application, so we can use the request module..\n  if (_.isNode()) {\n    request(_.merge({ method: 'GET', json: true }, options, { url }), (err, res, body) => {\n      callback(err, res, body);\n    });\n  } else if (_.isExtension()) {\n    // Inside an extension -> we cannot use jsonp!\n    const xhrOptions = _.merge(options, { url, method: 'GET', headers: {} });\n    // prepare request\n    const xhr = new XMLHttpRequest();\n    xhr.open(xhrOptions.method, xhrOptions.url, true);\n    Object.keys(xhrOptions)\n      .forEach(name => xhr.setRequestHeader(name, xhrOptions.headers[name]));\n    xhr.responseType = 'json';\n    // set request handler\n    xhr.addEventListener('load', () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status !== 200) {\n          callback(xhr.status, null, null);\n        } else {\n          callback(null, null, xhr.response);\n        }\n      }\n    });\n    // submit\n    xhr.send();\n  } else {\n    // Inside a web application, use jsonp..\n    // Callbacks must match the regex [a-zA-Z_$][\\w$]*(\\.[a-zA-Z_$][\\w$]*)*\n    const script = document.createElement('script');\n\n    const callbackName = `jsonp_callback_${Math.round(100000 * Math.random())}`;\n    window[callbackName] = (data) => {\n      delete window[callbackName];\n      document.body.removeChild(script);\n      callback(null, null, data);\n    };\n\n    // Inject the script in the document..\n    script.src = `${url}${url.indexOf('?') >= 0 ? '&' : '?'}callback=${callbackName}`;\n    document.body.appendChild(script);\n  }\n};\n\nmodule.exports = api;\n"]}